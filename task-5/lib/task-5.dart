/* Создайте иерархию классов вида спорта, который вас интересует.
Для примера возьмем киберспорт и опишем структуру классов.

Пусть существует максимально общая сущность: человек со свойством имя.
Далее есть разновидность человека: геймер, который входит в какую-то 
команду и имеет какие-то специфичные свойства, например, количество 
сыгранных матчей.
Есть другая разновидность человека: тренер. 
Он тренирует какую-то команду и у него свои специфические свойства, 
например, количество выигранных трофеев.
Дальше у геймера есть определенные роли или стратегии игры, у которых
 есть свои специфические черты.
Пусть у каждого игрока будет предусмотрен метод вывода информации о нем.
Подумайте, какие у сущностей есть общие свойства и можно ли их перенести 
в родительскую сущность. */

class Human {
  const Human(this.name);
  final String name;
}

//Плавец
class Swimmer extends Human {
  Swimmer(super.name, this.competitions);
//Количество соревнований
  int competitions;

//Нырять
  String dive() {
    return 'нырять';
  }

//Плавать под водой
  String swimUnderwater() {
    return 'плавать под водой';
  }
}

//Тренер
class Trainer extends Human {
  Trainer(super.name, this.experience);
//Стаж работы
  final int experience;
}

void main() {
  Trainer trainer = Trainer("Володя", 10);
  Swimmer swimmer = Swimmer('Алексей', 7);

  print(
      'Тренера зовут ${trainer.name} и он имеет стаж ${trainer.experience} лет');

  print('''Плавца зовут ${swimmer.name},он участвовал в ${swimmer.competitions} 
соревнованиях, он умеет хорошо ${swimmer.dive()} и ${swimmer.swimUnderwater()}.''');
}
